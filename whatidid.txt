What I did today to improve at Javascript programming.

Fri Apr 08 120m total

120m Refactored my local weather codepen app to use angular and pull a 5 day forecast. http://codepen.io/calicode/pen/qZpVNW

Sat Apr 09 145m total

15m Reviewed bookmarks collected recently from podcasts/meetups etc.
120m Read 100 pages of "Eloquent Javascript" By Marijn Haverbeke. Got a bit lost on the sections regarding phi coefficients but understood the js pieces. Did all the example exercises (fizzbuzz, chess board etc).


Sun Apr 10 140m total

30m Tried watching the second Angular course on code-school. It jumped into building
the app too much and even after pulling in the github repo I felt really lost. Setup basic repo for this project and learned how to pull it from both my laptop and cloud9.


15m Looked into node js course on code school along with react offerings. Also added vue.js to my list of things to look at. Need to focus on 1 framework.
55m Watched the first half of Douglas Crockford:The Javascript Programming Language on youtube

Mon Apr 11 17:16:03 CDT 2016 125m total
10m Setup a github repo to store this note and get used to git.

55m Watched the second half of Douglas Crockford:The Javascript Programming Language on youtube

60m  Code-school node.js course.
Section 1 - setting up basic hello world server using http.createServer.
Section 2 - Event loop basics, event emitters. Setting up multiple event listeners for one object
Section 3 - Streamd and using input.pipe(output) to simplify reads/writes. Can be used to pull data from stream to save to file. Create a simple upload script which writes a file passed to it through request and displays percentage completion.

Tue Apr 12 150m total

45m(lunch)- Code-school node.js course.
Section 4 - Modules. Learned basic exporting of modules which looks just like javascript. refrsher on package.json and npm. semantic versioning.
Section 5 - Express. Learned about setting up basic routes and making a simple twitter request.
105m - Code-school node.js course
Section 5 - Refactored code from video to use wikipedia api because twitter api requires auth and tying mobile phone. Setup basic template view using ejs, figured out usinbg foreach on an object won't work. I should know that. Tried setting up for in but ejs is throwing a fit. Will look at it tomorrow.


Wed Apr 13 195m total
Lunch
45m- Code-school node.js course.
Section 5 - finished section.

After work
150m
Fixed node wiki search app found under hello_dog.js in my other repos. problem was a syntax error with ejs.
Code-school node.js course
Section 6 - socket.io. Learned how to make a basic chat server, once I saw how it worked I implemented storing nicknames and sending them to clients, still not working 100% but its ok for now. Really digging socket.io. Had a small hiccup where I listened to the wrong object server and my html would not recognize socket.io.js.


Thur Apr 14 285m total
Lunch
45m - Code-School node.js course.
Section 7 - persisting data with redis.
Not sure where redis stores the data, probably just a local file. Will look into it further. Was thinking of using indexdb or something similar with node. This might be better.

Worked on finishing twitch streamer (http://codepen.io/calicode/pen/dMVGBE) display to play better with react. I was trying to jam all stream information into one array of objects, but could not figure out how to pass custom filters in react based on the tab selected, e.x tab = online ng-filter="stream", tab = offline ng-filter="!stream". The filter portion works if I set those values directly but changing the filter dynamically using a function or something else wasn't working. Other apps on codepen just use 3 arrays and change the $scope.streamers array based on filter.

240m - Got to code meetup 2h early and spent the time messing with angular. Finally fixed twitch tv app, i had the same controller called twice so it was causing scope issues. just need to pretty it up a bit.


Sat Apr 16 30m total
30m Code-school node.js soup to bits webcast.


Sun Apr 17 -240m total
120m -LEARNYOUNODE program filtered ls,make it modular, http client sections complete.

120m - Learnyounode program - async http client section, date microservice, finished fileserver, cdstarted http uppercas but not sure how to send post using netcat or something making this hard to troubleshoot. Might just write a seperate program to do it.



Mon Apr 18 150m total
Lunch

35m - Learnyou node - finished http uppercaser without using thought-map, yay. Started last challenge which builds an http service that handles multiple routes and spits out jsonified dates or epoch time depending on request url. Already figured out the multiple routes, reading the utc date from request url. Just working on a regexp to pull hh:dd:mm from the date string.

115m - Finished learnyounode. Figured out regexp for pulling date, was pretty close before I put it into regexp101, just needed more slashes. This seems to be the solution to regexp problems a decent amount of the time. Worked with date objects and slicing parts out. I really liked this course and will start either the stream version or express next.
    Did first 3 parts of expressworks, basic setup and using jade templating engine.


Tue Apr 19 85m
Lunch - 40m Expressworks - reading from form submit post request and stylish css which used the stylus npm module.

start 6pm
Finished expressworks. Last chapters were easy, convert paramters on a get request to json and return. then read a local file, parse to json and send back

break 6:45

Wed Apr 20 total 130m
Lunch -40m
Stream adventures module - got the first 4, stuck on one because its displaying newlines as \n. Reading through2 docs. might be something with streams in general

Night - attended chicago node meeting. Talk on callback less async. Es6 features. Already used promises a few times, need to read more. Added some new terms to look up such as flow control and contract fulfillment.

Thur Apr 21 total 20m
Lunch 20 mins - Stream adventures - just needed to add newline char to string being pushed. Finished next module which used stream-concat to buffer input from stdin, then reverse and output to stdout

Fri Apr 22 60m - express building blocks course


Sat apr 23 total 235m
Code-school Finished express building blocks course. Basic routing, using app.params to massage data before passing it along to route handler. Using routers and chaining handling different request types. Using app.all in place of app.params. Modularizing routes and supporting functions so they can just be used as middleware from the main server.js


Sun Apr 24 total 150m
Webcast - Soup to bits real time web with node 90m
Went over building an app using node/express. Modularizing the code into model/view/controller. Learned about pushing errors up the call stack. This is something I need more experience with. He was passing a callback up which had 2 arguments. Used sockets to handle interactions with redis.

Webcast - Soup To bits building blocks with express js 60m
Building tests. Setting up git repo right away

npm shrinkwrap locks dependancy versions so the right ones are
installed during npm install. Used when putting node_modules into .gitignore. Writing tests in mocha doesn't look to bad for basic express apps. Mentioned something called super test


Mon apr 25 180m total

Finished Webcast - Soup to bits building blocks with express.

More building tests, deploying to heroku. Modularizing. VIM might be worth spending the time to learn. Both webcasts
i've watched used it and they had vastly different configs. Splitting the screen is really nice, also auto completing so that i dont have to type app.get('/',(req,res)=> {}); out every time. I bet theres a learnyouvim type program.


Finished last user story for FreeCodeCamp Twitch.api challenge. http://codepen.io/calicode/pen/dMVGBE Interface is very bland. Need to figure out a better base template I can use for apps.


Tue Apr 26 210m total

Soup to bits - Shaping up with Angular.js. Should be viewed before doing course I was taking about earlier.
Learning a lot about using custom directives using the replace parameter, using controllers within a parent controller.

. Angular seed project starting point for nangularapps


Learned how to setup and deploy to heroku in prep for FCC backend projects. Finished and submitted javascript calculator project for FCC
Started timestamp microservice project, setup github repo and basic code. Started using VIM for everything.
 Wed Apr 27 Total 270m
Lunch - 50m Finished Soup to bits - Shaping up with Angular.js webcast. Learned about isolate scope and passing it around. Still a bit confused by this and need to see it in action. I think setting up my editor to collapse html for larger projects would be good. Seeing it all at once is overwhelming at times.
Starting VIM setup. managed to figure out plugin install


First FCC backend -timestamp microservice almost complete. Pushed to github and have heroku working as well. One edge case left.

Fri Apr 29 60m
Start 2pm
Finished FCC backend - timestamp microservice. https://intense-plateau-25456.herokuapp.com/ https://github.com/calicode/FCCbackend_timestamp

Started daily notes app. Quickly got overwhelmed cloning clementine.js, moving to a local setup which I thought would be easier, then I ran into issues getting vim working locally and the latest mongodb doesn't work on non LTS releases of ubuntu. Might just start program from scratch and integrate passport for auth later. I think the app cloned from clementine is almost ready but still feeling overwhelmed. 

Sat Apr 30 120m total 

Setup mongo on local machine, started code-school mongodb course


Mon May 2 total 121m

Finished MongoDb course on code school.
Course covered
*Db/Collections/Documents model
*Basic console commands and syntax (find,insert,update)
*search operators ($min,$max,$gte etc)
*Embedded documents vs Referenced and their strengths and weaknesses. Embedded should be good for most of my personal projects. 
*Aggregators and using them to get sorted results
*typing commands directly into the mongo console is painfull, I think i've typed {"":""} more times in the past day than I have since learning about objects. Can't wait to use a driver in node. 

Tue May 3 285 mins
Started work on daily notes app for real. Got
clementine js up and running, added a route for my page, made sure it has to be authenticated.
